name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Clean old build artifacts
        run: rm -rf dist build *.egg-info

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      # Optional: ensure tag == pyproject version (helps avoid mismatches)
      - name: Check version matches tag
        run: |
          PKG_VER=$(python -c "import tomllib,sys;print(tomllib.load(open('pyproject.toml','rb'))['tool']['poetry']['version'])")
          TAG="${GITHUB_REF_NAME#v}"
          echo "pyproject version: $PKG_VER, tag: $TAG"
          [ "$PKG_VER" = "$TAG" ] || { echo "Version mismatch"; exit 1; }

      - name: Build with Poetry
        run: poetry build  # creates dist/*.whl and dist/*.tar.gz

      - name: Show dist contents (debug)
        run: ls -l dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true